# -*- coding: utf-8 -*-
"""quant finance modelling

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yN8O5LiSBqTaVaA5WhrYpOBI25fgXUlG
"""

import pandas as pd

# Read the CSV file into a pandas DataFrame
data = pd.read_csv("Data.csv", sep=';')

# Drop the 'Unnamed: 0' column
data = data.drop(columns=['Unnamed: 0'])

# Display the first few rows of the DataFrame to understand its structure
print(data.head())

import pandas as pd
import numpy as np

# Read the CSV file into a pandas DataFrame
data = pd.read_csv("Data.csv", sep=';')

# Drop the 'Unnamed: 0' column if present
if 'Unnamed: 0' in data.columns:
    data = data.drop(columns=['Unnamed: 0'])

# Calculate historical repayment percentages
historical_repayments = data.iloc[:, 1:] / data['Origination Amount'].values[:, np.newaxis]

# Compute expected repayment percentages
def calculate_expected_repayments(historical_repayments):
    expected_repayments = np.zeros_like(historical_repayments)
    p2 = historical_repayments.iloc[0, -1] * 2  # Use the last row to get repayment of the first period
    for i in range(1, historical_repayments.shape[1]):
        pi = np.maximum(p2 * np.log(1 + (1 - (i - 1) / 30) * (1 - np.sum(historical_repayments.iloc[:, :i], axis=1))), 0)
        expected_repayments[:, i] = pi
    return expected_repayments

expected_repayments = calculate_expected_repayments(historical_repayments)

# Forecast cash flows
forecasted_cash_flows = data.iloc[:, 1:] * expected_repayments

# Derive present value of forecasted cash flows
discount_rate = 0.025  # Annual discount rate
monthly_discount_rate = np.power(1 + discount_rate, 1/12) - 1
# Derive present value of forecasted cash flows for the first 18 months
forecasted_cash_flows_pv = forecasted_cash_flows.iloc[:, :18] / np.power(1 + monthly_discount_rate, np.arange(1, 19))

# Compute portfolio value as of December 2020
portfolio_value = np.sum(forecasted_cash_flows_pv)

print("Portfolio value as of December 2020:", portfolio_value)

# 1: Analyze historical data and compute repayment rates
print("Task 1: Analyze historical data and compute repayment rates")
print(historical_repayments)

#  2: Forecast cash flows and find portfolio present value
print("\nTask 2: Forecast cash flows and find portfolio present value")
print("Portfolio value as of December 2020:", portfolio_value)